basePath: /
consumes:
    - application/json
definitions:
    AddDBServicePreCheckReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    AddDBServiceReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    AddMemberReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    AddNamespaceReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    AddRoleReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    AddSessionReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    AddUserGroupReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    AddUserReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    BindOauth2UserReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    CheckDBServiceIsConnectableReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    DelDBServicePreCheckReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    DelUserGroupPreCheckReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    DelUserPreCheckReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    GetFeishuConfigurationReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    GetLDAPConfigurationResDataReply:
        x-go-name: GetLDAPConfigurationReply
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    GetOauth2ConfigurationResDataReply:
        x-go-name: GetOauth2ConfigurationReply
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    GetOauth2TipsReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    GetSMTPConfigurationReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    GetSQLQueryConfigurationReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    GetUserBySessionReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    GetUserOpPermissionReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    GetUserReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    GetWeChatConfigurationReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    GetWebHookConfigurationReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    ListDBServiceReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    ListMemberReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    ListMembersForInternalReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    ListNamespaceReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    ListOpPermissionReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    ListRoleReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    ListUserGroupReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    ListUserReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    NotificationReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    OperateDataResourceHandleReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    RegisterDMSPluginReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    RegisterDMSProxyTargetReply:
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
    TestFeishuConfigurationReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    TestSMTPConfigurationReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    TestWeChatConfigurationReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    TestWebHookConfigurationReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    UpdateDBServiceReply:
        x-go-package: github.com/actiontech/dms/api/dms/service/v1
    WebHookSendMessageReply:
        x-go-name: WebHooksSendMessageReply
        x-go-package: github.com/actiontech/dms/pkg/dms-common/api/dms/v1
info:
    description: Documentation of our dms API.
    title: dms api.
    version: 0.1.0
paths:
    /v1/dms/configurations/feishu:
        get:
            operationId: GetFeishuConfiguration
            responses:
                "200":
                    description: GetFeishuConfigurationReply
                    schema:
                        $ref: '#/definitions/GetFeishuConfigurationReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: get feishu configuration.
            tags:
                - dms
        patch:
            operationId: UpdateFeishuConfiguration
            parameters:
                - description: update feishu configuration
                  in: body
                  name: update_feishu_configuration
                  schema: {}
                  x-go-name: UpdateFeishuConfiguration
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: update feishu configuration.
            tags:
                - dms
    /v1/dms/configurations/feishu/test:
        post:
            operationId: TestFeishuConfiguration
            parameters:
                - description: test feishu configuration
                  in: body
                  name: test_feishu_configuration
                  schema: {}
                  x-go-name: TestFeishuConfiguration
            responses:
                "200":
                    description: TestFeishuConfigurationReply
                    schema:
                        $ref: '#/definitions/TestFeishuConfigurationReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: test feishu configuration.
            tags:
                - dms
    /v1/dms/configurations/ldap:
        get:
            operationId: GetLDAPConfiguration
            responses:
                "200":
                    description: GetLDAPConfigurationResDataReply
                    schema:
                        $ref: '#/definitions/GetLDAPConfigurationResDataReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Get ldap configuration.
            tags:
                - dms
        patch:
            operationId: UpdateLDAPConfiguration
            parameters:
                - description: update ldap configuration
                  in: body
                  name: ldap
                  schema: {}
                  x-go-name: LDAPConfiguration
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Update ldap configuration.
            tags:
                - dms
    /v1/dms/configurations/oauth2:
        get:
            operationId: GetOauth2Configuration
            responses:
                "200":
                    description: GetOauth2ConfigurationResDataReply
                    schema:
                        $ref: '#/definitions/GetOauth2ConfigurationResDataReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Get Oauth2 configuration.
            tags:
                - dms
        patch:
            operationId: UpdateOauth2Configuration
            parameters:
                - description: update oauth2 configuration
                  in: body
                  name: oauth2
                  schema: {}
                  x-go-name: Oauth2Configuration
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Update Oauth2 configuration..
            tags:
                - dms
    /v1/dms/configurations/smtp:
        get:
            operationId: GetSMTPConfiguration
            responses:
                "200":
                    description: GetSMTPConfigurationReply
                    schema:
                        $ref: '#/definitions/GetSMTPConfigurationReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: get smtp configuration.
            tags:
                - dms
        patch:
            operationId: UpdateSMTPConfiguration
            parameters:
                - description: update smtp configuration
                  in: body
                  name: smtp_configuration
                  schema: {}
                  x-go-name: UpdateSMTPConfiguration
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Get smtp configuration.
            tags:
                - dms
    /v1/dms/configurations/smtp/test:
        post:
            operationId: TestSMTPConfiguration
            parameters:
                - description: test smtp configuration
                  in: body
                  name: test_smtp_configuration
                  schema: {}
                  x-go-name: TestSMTPConfiguration
            responses:
                "200":
                    description: TestSMTPConfigurationReply
                    schema:
                        $ref: '#/definitions/TestSMTPConfigurationReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: test smtp configuration.
            tags:
                - dms
    /v1/dms/configurations/sql_query:
        get:
            operationId: GetSQLQueryConfiguration
            responses:
                "200":
                    description: GetSQLQueryConfigurationReply
                    schema:
                        $ref: '#/definitions/GetSQLQueryConfigurationReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: get sql_query configuration.
            tags:
                - cloudbeaver
    /v1/dms/configurations/webhook:
        get:
            operationId: GetWebHookConfiguration
            responses:
                "200":
                    description: GetWebHookConfigurationReply
                    schema:
                        $ref: '#/definitions/GetWebHookConfigurationReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: get webhook configuration.
            tags:
                - dms
        patch:
            operationId: UpdateWebHookConfiguration
            parameters:
                - description: test webhook configuration
                  in: body
                  name: webhook_config
                  schema: {}
                  x-go-name: UpdateWebHookConfiguration
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: update webhook configuration.
            tags:
                - dms
    /v1/dms/configurations/webhook/test:
        post:
            operationId: TestWebHookConfiguration
            responses:
                "200":
                    description: TestWebHookConfigurationReply
                    schema:
                        $ref: '#/definitions/TestWebHookConfigurationReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: test webhook configuration.
            tags:
                - dms
    /v1/dms/configurations/wechat:
        get:
            operationId: GetWeChatConfiguration
            responses:
                "200":
                    description: GetWeChatConfigurationReply
                    schema:
                        $ref: '#/definitions/GetWeChatConfigurationReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: get wechat configuration.
            tags:
                - dms
        patch:
            operationId: UpdateWeChatConfiguration
            parameters:
                - description: update wechat configuration
                  in: body
                  name: update_wechat_configuration
                  schema: {}
                  x-go-name: UpdateWeChatConfiguration
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: update wechat configuration.
            tags:
                - dms
    /v1/dms/configurations/wechat/test:
        post:
            operationId: TestWeChatConfiguration
            parameters:
                - description: test wechat configuration
                  in: body
                  name: test_wechat_configuration
                  schema: {}
                  x-go-name: TestWeChatConfiguration
            responses:
                "200":
                    description: TestWeChatConfigurationReply
                    schema:
                        $ref: '#/definitions/TestWeChatConfigurationReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: test wechat configuration.
            tags:
                - dms
    /v1/dms/db_services:
        get:
            operationId: ListDBServices
            parameters:
                - description: the maximum count of db service to be returned
                  format: uint32
                  in: query
                  name: page_size
                  required: true
                  type: integer
                  x-go-name: PageSize
                - description: the offset of users to be returned, default is 0
                  format: uint32
                  in: query
                  name: page_index
                  type: integer
                  x-go-name: PageIndex
                - description: Multiple of ["name"], default is ["name"]
                  in: query
                  name: order_by
                  x-go-name: OrderBy
                - description: the db service business name
                  in: query
                  name: filter_by_business
                  type: string
                  x-go-name: FilterByBusiness
                - description: the db service host
                  in: query
                  name: filter_by_host
                  type: string
                  x-go-name: FilterByHost
                - description: the db service uid
                  in: query
                  name: filter_by_uid
                  type: string
                  x-go-name: FilterByUID
                - description: the db service port
                  in: query
                  name: filter_by_port
                  type: string
                  x-go-name: FilterByPort
                - description: the db service db type
                  in: query
                  name: filter_by_db_type
                  type: string
                  x-go-name: FilterByDBType
                - description: |-
                    filter by db service namespace uid
                    only the sys user can use an empty namespace value, which means lookup from all namespaces
                  in: query
                  name: filter_by_namespace_uid
                  type: string
                  x-go-name: FilterByNamespaceUid
            responses:
                "200":
                    description: ListDBServiceReply
                    schema:
                        $ref: '#/definitions/ListDBServiceReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: List db service.
            tags:
                - dms
        post:
            operationId: AddDBService
            parameters:
                - description: Add new db service
                  in: body
                  name: db_service
                  schema: {}
                  x-go-name: DBService
            responses:
                "200":
                    description: AddDBServiceReply
                    schema:
                        $ref: '#/definitions/AddDBServiceReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Add DB Service.
            tags:
                - dms
    /v1/dms/db_services/{db_service_uid}:
        delete:
            operationId: DelDBService
            parameters:
                - description: db service uid
                  in: path
                  name: db_service_uid
                  required: true
                  type: string
                  x-go-name: DBServiceUid
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Delete a DB Service.
            tags:
                - dms
        put:
            operationId: UpdateDBService
            parameters:
                - description: db_service_uid
                  in: path
                  name: db_service_uid
                  required: true
                  type: string
                  x-go-name: DBServiceUid
                - description: Update a DB service
                  in: body
                  name: db_service
                  schema: {}
                  x-go-name: DBService
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: update a DB Service.
            tags:
                - dms
    /v1/dms/db_services/connect:
        post:
            operationId: CheckDBServiceIsConnectable
            parameters:
                - description: check db_service is connectable
                  in: body
                  name: db_service
                  schema: {}
                  x-go-name: DBService
            responses:
                "200":
                    description: CheckDBServiceIsConnectableReply
                    schema:
                        $ref: '#/definitions/CheckDBServiceIsConnectableReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: check if the db_service is connectable.
            tags:
                - dms
    /v1/dms/members:
        get:
            operationId: ListMembers
            parameters:
                - description: the maximum count of member to be returned
                  format: uint32
                  in: query
                  name: page_size
                  required: true
                  type: integer
                  x-go-name: PageSize
                - description: the offset of members to be returned, default is 0
                  format: uint32
                  in: query
                  name: page_index
                  type: integer
                  x-go-name: PageIndex
                - description: Multiple of ["name"], default is ["name"]
                  in: query
                  name: order_by
                  x-go-name: OrderBy
                - description: filter the member user uid
                  in: query
                  name: filter_by_user_uid
                  type: string
                  x-go-name: FilterByUserUid
                - description: the member namespace uid
                  in: query
                  name: namespace_uid
                  required: true
                  type: string
                  x-go-name: NamespaceUid
            responses:
                "200":
                    description: ListMemberReply
                    schema:
                        $ref: '#/definitions/ListMemberReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: List member, for front page.
            tags:
                - dms
        post:
            operationId: AddMember
            parameters:
                - description: Add new member
                  in: body
                  name: member
                  schema: {}
                  x-go-name: Member
            responses:
                "200":
                    description: AddMemberReply
                    schema:
                        $ref: '#/definitions/AddMemberReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Add member.
            tags:
                - dms
    /v1/dms/members/{member_uid}:
        delete:
            operationId: DelMember
            parameters:
                - description: member uid
                  in: path
                  name: member_uid
                  required: true
                  type: string
                  x-go-name: MemberUid
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Delete a member.
            tags:
                - dms
        put:
            operationId: UpdateMember
            parameters:
                - description: Member uid
                  in: path
                  name: member_uid
                  required: true
                  type: string
                  x-go-name: MemberUid
                - description: Update a member
                  in: body
                  name: member
                  schema: {}
                  x-go-name: Member
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Update a member.
            tags:
                - dms
    /v1/dms/members/internal:
        get:
            operationId: ListMembersForInternal
            parameters:
                - description: the maximum count of member to be returned
                  format: uint32
                  in: query
                  name: page_size
                  required: true
                  type: integer
                  x-go-name: PageSize
                - description: the offset of members to be returned, default is 0
                  format: uint32
                  in: query
                  name: page_index
                  type: integer
                  x-go-name: PageIndex
                - description: the member namespace uid
                  in: query
                  name: namespace_uid
                  type: string
                  x-go-name: NamespaceUid
            responses:
                "200":
                    description: ListMembersForInternalReply
                    schema:
                        $ref: '#/definitions/ListMembersForInternalReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: List members, for internal backend service.
            tags:
                - dms
    /v1/dms/namespaces:
        get:
            operationId: ListNamespaces
            parameters:
                - description: the maximum count of namespace to be returned
                  format: uint32
                  in: query
                  name: page_size
                  required: true
                  type: integer
                  x-go-name: PageSize
                - description: the offset of namespaces to be returned, default is 0
                  format: uint32
                  in: query
                  name: page_index
                  type: integer
                  x-go-name: PageIndex
                - description: Multiple of ["name"], default is ["name"]
                  in: query
                  name: order_by
                  x-go-name: OrderBy
                - description: filter the namespace name
                  in: query
                  name: filter_by_name
                  type: string
                  x-go-name: FilterByName
                - description: filter the namespace UID
                  in: query
                  name: filter_by_uid
                  type: string
                  x-go-name: FilterByUID
            responses:
                "200":
                    description: ListNamespaceReply
                    schema:
                        $ref: '#/definitions/ListNamespaceReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: List namespaces.
            tags:
                - dms
        post:
            operationId: AddNamespace
            parameters:
                - description: Add new Namespace
                  in: body
                  name: namespace
                  schema: {}
                  x-go-name: Namespace
            responses:
                "200":
                    description: AddNamespaceReply
                    schema:
                        $ref: '#/definitions/AddNamespaceReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Add namespaces.
            tags:
                - dms
    /v1/dms/namespaces/{namespace_uid}:
        delete:
            description: Delete a Namespace
            operationId: DelNamespace
            parameters:
                - description: namespace uid
                  in: path
                  name: namespace_uid
                  required: true
                  type: string
                  x-go-name: NamespaceUid
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            tags:
                - dms
        put:
            operationId: UpdateNamespace
            parameters:
                - description: Namespace uid
                  in: path
                  name: namespace_uid
                  required: true
                  type: string
                  x-go-name: NamespaceUid
                - description: Update a namespace
                  in: body
                  name: namespace
                  schema: {}
                  x-go-name: Namespace
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: update a Namespace.
            tags:
                - dms
    /v1/dms/namespaces/{namespace_uid}/archive:
        put:
            operationId: ArchiveNamespace
            parameters:
                - description: Namespace uid
                  in: path
                  name: namespace_uid
                  required: true
                  type: string
                  x-go-name: NamespaceUid
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Archive a Namespace.
            tags:
                - dms
    /v1/dms/namespaces/{namespace_uid}/unarchive:
        put:
            operationId: UnarchiveNamespace
            parameters:
                - description: Namespace uid
                  in: path
                  name: namespace_uid
                  required: true
                  type: string
                  x-go-name: NamespaceUid
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Unarchive a Namespace.
            tags:
                - dms
    /v1/dms/notifications:
        post:
            operationId: Notification
            parameters:
                - description: notification
                  in: body
                  name: notification
                  schema: {}
                  x-go-name: Notification
            responses:
                "200":
                    description: NotificationReply
                    schema:
                        $ref: '#/definitions/NotificationReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: notify message.
            tags:
                - dms
    /v1/dms/oauth2/tips:
        get:
            operationId: GetOauth2Tips
            responses:
                "200":
                    description: GetOauth2TipsReply
                    schema:
                        $ref: '#/definitions/GetOauth2TipsReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Get Oauth2 Tips.
            tags:
                - dms
    /v1/dms/oauth2/user/bind:
        post:
            operationId: BindOauth2User
            parameters:
                - in: query
                  name: user_name
                  type: string
                  x-go-name: UserName
                - in: query
                  name: pwd
                  type: string
                  x-go-name: Pwd
                - in: query
                  name: oauth2_token
                  type: string
                  x-go-name: Oauth2Token
            responses:
                "200":
                    description: BindOauth2UserReply
                    schema:
                        $ref: '#/definitions/BindOauth2UserReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Bind Oauth2 User.
            tags:
                - dms
    /v1/dms/op_permissions:
        get:
            operationId: ListOpPermissions
            parameters:
                - description: the maximum count of op permission to be returned
                  format: uint32
                  in: query
                  name: page_size
                  required: true
                  type: integer
                  x-go-name: PageSize
                - description: the offset of op permissions to be returned, default is 0
                  format: uint32
                  in: query
                  name: page_index
                  type: integer
                  x-go-name: PageIndex
                - description: Order by the specified field
                  in: query
                  name: order_by
                  x-go-name: OrderBy
                - description: filter by op permission target
                  in: query
                  name: filter_by_target
                  x-go-name: FilterByTarget
            responses:
                "200":
                    description: ListOpPermissionReply
                    schema:
                        $ref: '#/definitions/ListOpPermissionReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: List op permission.
            tags:
                - dms
    /v1/dms/plugin:
        post:
            operationId: RegisterDMSPlugin
            parameters:
                - description: Register dms plugin
                  in: body
                  name: plugin
                  schema: {}
                  x-go-name: Plugin
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Register dms plugin.
            tags:
                - dms
    /v1/dms/proxy:
        post:
            operationId: RegisterDMSProxyTarget
            parameters:
                - description: register dms proxy
                  in: body
                  name: dms_proxy_target
                  schema: {}
                  x-go-name: DMSProxyTarget
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Register dms proxy target.
            tags:
                - dms
    /v1/dms/roles:
        get:
            operationId: ListRoles
            parameters:
                - description: the maximum count of role to be returned
                  format: uint32
                  in: query
                  name: page_size
                  required: true
                  type: integer
                  x-go-name: PageSize
                - description: the offset of roles to be returned, default is 0
                  format: uint32
                  in: query
                  name: page_index
                  type: integer
                  x-go-name: PageIndex
                - description: Multiple of ["name"], default is ["name"]
                  in: query
                  name: order_by
                  x-go-name: OrderBy
                - description: filter the role name
                  in: query
                  name: filter_by_name
                  type: string
                  x-go-name: FilterByName
            responses:
                "200":
                    description: ListRoleReply
                    schema:
                        $ref: '#/definitions/ListRoleReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: List roles.
            tags:
                - dms
        post:
            operationId: AddRole
            parameters:
                - description: Add new role
                  in: body
                  name: role
                  schema: {}
                  x-go-name: Role
            responses:
                "200":
                    description: AddRoleReply
                    schema:
                        $ref: '#/definitions/AddRoleReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Add role.
            tags:
                - dms
    /v1/dms/roles/{role_uid}:
        delete:
            operationId: DelRole
            parameters:
                - description: role uid
                  in: path
                  name: role_uid
                  required: true
                  type: string
                  x-go-name: RoleUid
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Delete a role.
            tags:
                - dms
        put:
            operationId: UpdateRole
            parameters:
                - description: Role uid
                  in: path
                  name: role_uid
                  required: true
                  type: string
                  x-go-name: RoleUid
                - description: Update a role
                  in: body
                  name: role
                  schema: {}
                  x-go-name: Role
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Update a role.
            tags:
                - dms
    /v1/dms/sessions:
        post:
            operationId: AddSession
            parameters:
                - description: Add a new session
                  in: body
                  name: session
                  schema: {}
                  x-go-name: Session
            responses:
                "200":
                    description: AddSessionReply
                    schema:
                        $ref: '#/definitions/AddSessionReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Add a session.
            tags:
                - dms
    /v1/dms/sessions/user:
        get:
            operationId: GetUserBySession
            parameters:
                - in: query
                  name: user_uid
                  type: string
                  x-go-name: UserUid
            responses:
                "200":
                    description: GetUserBySessionReply
                    schema:
                        $ref: '#/definitions/GetUserBySessionReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Get current user.
            tags:
                - dms
    /v1/dms/user_groups:
        get:
            operationId: ListUserGroups
            parameters:
                - description: the maximum count of user to be returned
                  format: uint32
                  in: query
                  name: page_size
                  required: true
                  type: integer
                  x-go-name: PageSize
                - description: the offset of user groups to be returned, default is 0
                  format: uint32
                  in: query
                  name: page_index
                  type: integer
                  x-go-name: PageIndex
                - description: Multiple of ["name"], default is ["name"]
                  in: query
                  name: order_by
                  x-go-name: OrderBy
                - description: filter the user group name
                  in: query
                  name: filter_by_name
                  type: string
                  x-go-name: FilterByName
            responses:
                "200":
                    description: ListUserGroupReply
                    schema:
                        $ref: '#/definitions/ListUserGroupReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: List user groups.
            tags:
                - dms
        post:
            operationId: AddUserGroup
            parameters:
                - description: Add new user group
                  in: body
                  name: user_group
                  schema: {}
                  x-go-name: UserGroup
            responses:
                "200":
                    description: AddUserGroupReply
                    schema:
                        $ref: '#/definitions/AddUserGroupReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Add user group.
            tags:
                - dms
    /v1/dms/user_groups/{user_group_uid}:
        delete:
            operationId: DelUserGroup
            parameters:
                - description: user group uid
                  in: path
                  name: user_group_uid
                  required: true
                  type: string
                  x-go-name: UserGroupUid
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Delete a user group.
            tags:
                - dms
        put:
            operationId: UpdateUserGroup
            parameters:
                - description: UserGroup uid
                  in: path
                  name: user_group_uid
                  required: true
                  type: string
                  x-go-name: UserGroupUid
                - description: Update a user group
                  in: body
                  name: user_group
                  schema: {}
                  x-go-name: UserGroup
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Update a user group.
            tags:
                - dms
    /v1/dms/users:
        get:
            operationId: ListUsers
            parameters:
                - description: the maximum count of user to be returned
                  format: uint32
                  in: query
                  name: page_size
                  required: true
                  type: integer
                  x-go-name: PageSize
                - description: the offset of users to be returned, default is 0
                  format: uint32
                  in: query
                  name: page_index
                  type: integer
                  x-go-name: PageIndex
                - description: Multiple of ["name"], default is ["name"]
                  in: query
                  name: order_by
                  x-go-name: OrderBy
                - description: filter the user name
                  in: query
                  name: filter_by_name
                  type: string
                  x-go-name: FilterByName
                - description: filter the user uids
                  in: query
                  name: filter_by_uids
                  type: string
                  x-go-name: FilterByUids
                - description: filter deleted user to be return ,default is false
                  in: query
                  name: filter_del_user
                  type: boolean
                  x-go-name: FilterDeletedUser
            responses:
                "200":
                    description: ListUserReply
                    schema:
                        $ref: '#/definitions/ListUserReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: List users.
            tags:
                - dms
        post:
            operationId: AddUser
            parameters:
                - description: Add new user
                  in: body
                  name: user
                  schema: {}
                  x-go-name: User
            responses:
                "200":
                    description: AddUserReply
                    schema:
                        $ref: '#/definitions/AddUserReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Add user.
            tags:
                - dms
    /v1/dms/users/{user_uid}:
        delete:
            operationId: DelUser
            parameters:
                - description: user uid
                  in: path
                  name: user_uid
                  required: true
                  type: string
                  x-go-name: UserUid
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Delete a user.
            tags:
                - dms
        get:
            operationId: GetUser
            parameters:
                - description: user uid
                  in: path
                  name: user_uid
                  required: true
                  type: string
                  x-go-name: UserUid
            responses:
                "200":
                    description: GetUserReply
                    schema:
                        $ref: '#/definitions/GetUserReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Get user info, This API is used by other component such as sqle&auth to get user info.
            tags:
                - dms
        put:
            operationId: UpdateUser
            parameters:
                - description: User uid
                  in: path
                  name: user_uid
                  required: true
                  type: string
                  x-go-name: UserUid
                - description: Update a user
                  in: body
                  name: user
                  schema: {}
                  x-go-name: User
            responses:
                "200":
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Update a user.
            tags:
                - dms
    /v1/dms/users/{user_uid}/op_permission:
        get:
            operationId: GetUserOpPermission
            parameters:
                - description: user uid
                  in: path
                  name: user_uid
                  required: true
                  type: string
                  x-go-name: UserUid
                - description: user op permission info
                  in: body
                  name: user_op_permission
                  schema: {}
                  x-go-name: UserOpPermission
            responses:
                "200":
                    description: GetUserOpPermissionReply
                    schema:
                        $ref: '#/definitions/GetUserOpPermissionReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: Get user op permission info, This API is used by other component such as sqle&auth to check user permissions.
            tags:
                - dms
    /v1/dms/webhooks:
        post:
            operationId: WebHookSendMessage
            parameters:
                - description: webhooks
                  in: body
                  name: webhook_message
                  schema: {}
                  x-go-name: WebHookMessage
            responses:
                "200":
                    description: WebHookSendMessageReply
                    schema:
                        $ref: '#/definitions/WebHookSendMessageReply'
                default:
                    description: GenericResp
                    schema:
                        $ref: '#/definitions/GenericResp'
            summary: webhook send message.
            tags:
                - dms
produces:
    - application/json
responses:
    GenericResp:
        description: GenericResp defines the return code and msg
        headers:
            code:
                description: code
                format: int64
                type: integer
            msg:
                description: message
                type: string
schemes:
    - http
    - https
securityDefinitions:
    basic:
        type: basic
swagger: "2.0"
